#N canvas 305 23 916 530 12;
#X obj 59 184 nbx 5 14 1 100 0 1 empty empty empty 0 -8 0 10 -228856
-1 -1 11 256;
#X obj 163 369 tabosc4~ square;
#X obj 163 340 nbx 5 14 -1e+37 1e+37 0 1 empty hz empty 0 -8 0 10 -228856
-1 -1 123.471 256;
#X obj 161 151 cnv 15 198 138 empty empty empty 20 12 0 14 -228856
-66577 0;
#N canvas 0 22 474 324 (subpatch) 0;
#X array square 4099 float 0;
#X coords 0 1 4098 -1 200 140 1;
#X restore 160 150 graph;
#X text 143 148 1;
#X text 138 269 -1;
#X obj 141 409 out~;
#N canvas 786 159 450 300 sequencer 0;
#X obj 195 193 mtof;
#X obj 72 132 metro 200;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sequencer 16 float 3;
#A 0 -6 -8 -8 -3 -8 1 4 4 -3 -5 -5 -1 2 6 7 7;
#X coords 0 12 16 -12 100 70 1;
#X restore 223 104 graph;
#X obj 72 193 v i;
#X obj 195 221 outlet;
#X obj 72 107 inlet;
#X obj 72 155 expr (i + 1) % 16 \; sequencer[i] + 46;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X restore 468 277 pd sequencer;
#X obj 468 254 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 569 263 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 566 288 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 609 354 else/graph~ 950 5 1.1 -1.1;
#X text 25 31 And yet again \, we can generate square waves with a
sum of partials. See [pd square] howit's done. As before \, enter the
number of harmonics into the number box. Not suprisingly \, a perfect
square wave need an infinite sum of psrtials., f 54;
#N canvas 292 30 650 509 square 0;
#X obj 51 30 inlet;
#X floatatom 51 64 5 0 0 0 - - -, f 5;
#X obj 66 246 list prepend;
#X text 69 185 p;
#X msg 51 395 normalize 1;
#X obj 51 366 trigger bang anything;
#X obj 174 427 send square;
#X msg 208 127 1 0 0.333333 0 0.2 0 0.142857 0 0.111111 0 0.090909
0 0.076923 0 0.0666667 0 0.0588235 0 0.0526315 0 0.047619 0 0.0434782
0 0.04 0 0.037037 0 0.0344827 0 0.0322581 0;
#X obj 66 203 expr if($f1 % 2 == 0 \, 0 \, 1 / $f1);
#X obj 51 92 t float bang;
#X obj 161 252 list;
#X obj 51 274 list;
#X obj 51 321 list prepend sinesum 4096;
#X obj 50 344 list trim;
#X obj 34 140 loop;
#X msg 41 114 1 \$1;
#X text 210 31 Square: partials decay at a "1/p" rate \, where "p"
is the partial number. Even partials are zeroed.;
#X text 301 96 Example with 32 partials.;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 10 0;
#X connect 2 0 11 1;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X connect 8 0 2 0;
#X connect 9 0 15 0;
#X connect 9 1 2 1;
#X connect 10 0 2 1;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 5 0;
#X connect 14 0 8 0;
#X connect 14 1 11 0;
#X connect 15 0 14 0;
#X restore 59 214 pd square;
#X obj 499 393 out~;
#X obj 542 315 square~ 100;
#X text 436 31 The [square~] object \, from ELSE \, is a perfect sqaure
wave oscillator which alternates between 1 and -1 values. Its second
inlet or argument lets you also change the "pulse" width \, which is
how much of the period we have a positive value (1)., f 62;
#X text 436 112 The pulse width parameter is from 0 to 1 \, and the
default width is 0.5 \, which means it is symmetric and that the first
half of the period is "1" and the second is "-1" \, that is 50/50.
A width of 0.3 gives us 30% positive and 70% negative values., f 62
;
#X text 436 193 A width of 0 makes it only one the first sample equal
to one \, and a width of 1 makes only the last sample equal to -1!
, f 62;
#X connect 0 0 14 0;
#X connect 1 0 7 0;
#X connect 1 0 7 1;
#X connect 2 0 1 0;
#X connect 8 0 16 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 16 1;
#X connect 16 0 12 0;
#X connect 16 0 15 0;
#X connect 16 0 15 1;
