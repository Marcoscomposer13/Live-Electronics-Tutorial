#N canvas 432 28 858 481 12;
#X floatatom 203 336 0 0 0 0 - - -;
#X floatatom 204 250 0 0 0 0 - - -;
#X obj 204 277 send volume;
#X obj 203 309 receive midinote;
#X obj 392 213 hsl 128 15 -1 1 0 0 slider empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 392 244 hsl 128 15 -1 1 0 0 empty slider empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 52 280 send slider;
#X floatatom 52 253 5 0 0 0 - - -;
#X obj 53 310 receive slider;
#X floatatom 53 336 5 0 0 0 - - -;
#X msg 160 173 \; slider 99 \; volume 56;
#X text 384 185 built-in send/receive;
#X text 20 85 A semicolon in messages behaves as a [send] object \,
which is useful to send things to several places at one click. GUI
elements also have built in send and receive functionalities. You can
set them by going into the properties window under “messages”.
, f 61;
#X obj 570 181 send pd;
#X msg 570 118 dsp 1;
#X msg 586 149 dsp 0;
#X msg 730 149 \; pd dsp \$1;
#X obj 730 122 tgl 18 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 754 121 On/Off;
#X text 20 22 A [send] and [receive] with the same adress argument
allow cordless connections. They communicate anywhere in a patch \,
including subpatches but also to other patches \, including abstractions.
, f 61;
#X text 483 20 You can also use [send] to send messages to Pd. For
instance \, the “dsp 1” and “dsp 0” messages \, respectively
\, turn the DSP engine on and off. Arrays can also receive commands
from a [send] object that has the array's name as the address., f
48;
#X msg 672 226 \; array const 0.5;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array 100 float 2;
#X coords 0 1 100 -1 200 140 1 0 0;
#X restore 607 306 graph;
#X obj 389 303 send array;
#X msg 389 274 const \$1;
#X text 614 118 DSP On;
#X text 630 148 DSP Off;
#X obj 306 425 send~;
#X obj 352 425 receive~;
#X obj 449 425 throw~;
#X obj 502 424 catch~;
#X text 272 355 There are also audio object versions \, but besides
[send~]/[receive~] and we also have [throw~]/[catch~]. Check their
help files., f 43;
#X text 33 392 Semicolons will always break \; lines \, this also happens
on \; objects and comments!;
#X connect 1 0 2 0;
#X connect 3 0 0 0;
#X connect 5 0 24 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 16 0;
#X connect 24 0 23 0;
