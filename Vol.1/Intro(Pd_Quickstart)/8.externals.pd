#N canvas 404 191 852 440 12;
#X declare -path else;
#X text 30 120 There are two types of external libraries \, they either
come compiled in a single binary pack or each object comes as a separate
binary. The first case is the classic library format and needs to be
loaded in Pd's startup (Preferences => Startup). The second case doesn't
need any of that but you need to add the library's folder to the search
paths (Preferences => Path)., f 49;
#X obj 622 75 sine~;
#X obj 573 384 rev1~;
#X obj 626 384 rev2~, f 8;
#X obj 700 384 rev3~, f 8;
#X obj 452 75 declare -path else;
#X obj 695 75 pluck~;
#X text 397 119 For single binaries \, as is the case with else \,
you can also use "namespaces" \, this means loading the external by
setting a relative path \, such as:;
#X obj 612 160 else/fbdelay~;
#X text 30 28 You can download and install externals directly from
the "Help => Find Externals" menu. All you need to do is search the
name of an external or external library ("else" \, for example) and
get it. Externals get usually downloaded to Pd's externals folder and
need to be loaded properly., f 49;
#X text 397 208 This will only work if the folder for the external
library is included in a folder that Pd automatically searches for
files \, as is the case with Pd's externals folder \, the usual folder
for externals in Pd.;
#X text 393 27 Here is an example on how to use [declare] and some
examples of external objects from "else".;
#X text 397 273 In techical terms \, an external is any object not
part of Pd's binary. Pd Vanilla itself includes extra objects that
are technically externals. Abstractions are also external objects.
One example are the reverb that comes with Pd. These are found in a
folder called "extra" inside Pd's application and is searched automatically.
, f 59;
#X text 30 339 If you haven't \, please download "else" \, which is
needed for this tutorial and widely from this point forward. It must
be added to the search paths so the objects are be loaded properly.
, f 49;
#X text 30 243 A different method is to use the [declare] object to
load both kinds of libraries with the "-lib" and "-path" flags. This
loads the libraries just for the patch containing the [declare] object.
Hence \, adding to the Path or Statup installs permanently., f 49
;
