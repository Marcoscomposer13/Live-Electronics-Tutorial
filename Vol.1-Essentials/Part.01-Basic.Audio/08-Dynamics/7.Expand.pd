#N canvas 571 90 1004 710 12;
#X text 499 158 Se for maior que o "Treshold" \, pegamos a diferença
entre o "Treshold" e o valor de amplitude RMS dada pelo [env~] - esse
número é sempre negativo. Caso não seja maior que o "Treshold" \, apenas
enviamos o número 1 \, que será usado como ajuste de amplitude e implica
que não há alteração nenhuma no processamento. Ou seja \, que o compressor
está desligado.;
#X text 501 266 O objeto [moses] \, por padrão (quer dizer \, sem argumentos)
direcionará o número 1 para o outlet direito e os números abaixo de
zero para o outlet esquerdo \, que está conectado ao resto do patch
de processamento do Compressor/Limiter.;
#X text 501 609 As contas à esquerda encontram esse ajuste de ganho
em dB \, que depois converte para razão (ou proporção) como já fizemos
antes. O último parâmetro é um outro ajuste de ganho final \, que segue
essa mesma lógica.;
#X text 501 416 Além disso \, há a latência do tempo de análise do
objeto [env~] \, que nesse caso é de 512 amostras (11.6 ms no sample
rate de 44.1Khz) \, compensada com o objeto [delay~]. Na prática \,
porém \, essa latência é o tempo entre uma análise à próxima. Portanto
\, o ataque tambem suaviza a mudança desses valores e não faz sentido
que seja maior que 11.6 ms.;
#X text 496 37 Agora temos um patch relativamente simples que funciona
como um compressor e um limiter. O princípio é analisar a amplitude
RMS com o objeto [env~] e fazer alguns ajustes de acordo com dois parâmetros
principais \, o "Treshold" e o "Ratio". Primeiramente \, temos uma
lógica com o comparativo ">" (maior que) \, em que comparamos se os
valores da análise do [env~] estão acima de um patamar (parâmetro "Threshold").
;
#X text 501 522 O "ratio" é a razão de compressão. Uma razão de 2 (ou
seja \, 2:1) em um "Threshold" de 90 dB significa que um sinal de 96
dB cairá para 93 dB. Logo \, seria necessário um ajuste de 3 dB abaixo.
Um ratio bem alto como \, por exemplo \, 100 funciona como um limiter.
;
#X text 500 350 O compressor tem um tempo de demora para começar a
atuar \, dado pelo "Attack" e também demora para ser totalmente desativado
(definido pelo "Release") - ambos dependem do objeto [line~] para isso.
;
#X obj 179 419 r \$0-release;
#X obj 98 501 *~;
#X obj 183 444 r \$0-attack;
#X obj 116 418 min~ 1;
#X obj 134 323 /~;
#X obj 116 278 -~;
#X obj 116 355 -~;
#X obj 152 265 max 1;
#X obj 150 203 else/f2s~ 10;
#X obj 150 179 r \$0-thresh;
#X obj 152 239 r \$0-ratio;
#X obj 263 292 nbx 5 14 1 100 0 0 \$0-ratio empty empty 0 -8 0 10 -228856
-1 -1 10 256;
#X obj 263 267 nbx 5 14 -100 0 0 0 \$0-thresh empty empty 0 -8 0 10
-228856 -1 -1 -30 256;
#X obj 263 345 nbx 5 14 0 100 0 0 \$0-release empty empty 0 -8 0 10
-228856 -1 -1 10 256;
#X obj 263 320 nbx 5 14 0 100 0 0 \$0-attack empty empty 0 -8 0 10
-228856 -1 -1 10 256;
#X text 321 266 Threshold (dB);
#X text 324 319 Attack (ms);
#X text 324 344 Release (ms);
#X text 323 291 Ratio (x:1);
#X obj 134 138 mov.rms~ 512 -db;
#X obj 152 293 f2s~ 10;
#X obj 116 386 db2lin~;
#X obj 116 468 slew~;
#X obj 98 83 play.file~ 1 ../../../samples/kantele.wav 1 1;
#X obj 99 566 out~;
#X obj 255 552 meter~;
#X connect 7 0 29 1;
#X connect 8 0 31 0;
#X connect 8 0 31 1;
#X connect 8 0 32 0;
#X connect 9 0 29 2;
#X connect 10 0 29 0;
#X connect 11 0 13 1;
#X connect 12 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 28 0;
#X connect 14 0 27 0;
#X connect 15 0 12 0;
#X connect 16 0 15 0;
#X connect 17 0 14 0;
#X connect 26 0 12 1;
#X connect 27 0 11 1;
#X connect 28 0 10 0;
#X connect 29 0 8 1;
#X connect 30 0 26 0;
#X connect 30 0 8 0;
