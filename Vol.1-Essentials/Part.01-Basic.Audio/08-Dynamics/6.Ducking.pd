#N canvas 528 105 743 605 12;
#X obj 399 402 nbx 5 14 1 100 0 0 \$0-ratio empty empty 0 -8 0 10 -228856
-1 -1 1 256;
#X obj 399 383 nbx 5 14 -100 0 0 0 \$0-thresh empty empty 0 -8 0 10
-228856 -1 -1 -30 256;
#X obj 399 440 nbx 5 14 0 100 0 0 \$0-release empty empty 0 -8 0 10
-228856 -1 -1 10 256;
#X obj 399 421 nbx 5 14 0 100 0 0 \$0-attack empty empty 0 -8 0 10
-228856 -1 -1 10 256;
#X text 460 382 Threshold (dB), f 20;
#X text 460 420 Attack (ms), f 20;
#X text 460 439 Release (ms), f 20;
#X text 460 401 Ratio (x:1), f 20;
#X obj 82 527 out~;
#X obj 82 485 *~;
#X obj 187 324 r \$0-release;
#X obj 120 373 else/slew~;
#X obj 187 349 r \$0-attack;
#X obj 120 240 -~;
#X obj 162 285 else/f2s~ 10;
#X obj 162 260 max 1;
#X obj 154 175 else/f2s~ 10;
#X obj 154 151 r \$0-thresh;
#X obj 162 234 r \$0-ratio;
#X obj 120 285 *~;
#X obj 120 326 min~ 0;
#X obj 120 403 else/db2lin~;
#X obj 138 84 abs~;
#X obj 138 110 else/lin2db~;
#X obj 76 39 noise~;
#X obj 575 499 duck~;
#X obj 198 19 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 198 50 else/glide~ 500;
#X obj 138 41 adc~ 1;
#X text 346 485 This patch is the basis of the [duck~] object from
ELSE =====>, f 31;
#X text 75 13 input;
#X text 318 51 <= control;
#X text 321 92 This is a volume duck effect based on the compressor
implementation from the last example. This is also known as side chain
compression. It reduces the volume of an input signal depending on
the analysis of another audio signal \, called a "control signal".
, f 52;
#X text 321 172 The structure is quite similar to the compressor patch.
This is useful to let the control signal through \, such as a beat
or rythmic pattern \, while the input gets faded to the background.
, f 52;
#X text 341 532 The difference is that this object can also mix both
signals. Check its help file., f 39;
#X text 321 236 Note that we're using a simple absolute amplitude value
instead of a RMS window. This is actually the same as having the [mov.rms~]
object with a window size of 1! This is a peak detection mode that
acts quicker. You can also have this mode in [compress~] if you set
the window size to 1!, f 52;
#X text 320 336 Anyway \, for this patch \, we don't have an overall
gain. But try messing with the parameters below:, f 51;
#X connect 9 0 8 0;
#X connect 9 0 8 1;
#X connect 10 0 11 1;
#X connect 11 0 21 0;
#X connect 12 0 11 2;
#X connect 13 0 19 0;
#X connect 14 0 19 1;
#X connect 15 0 14 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 18 0 15 0;
#X connect 19 0 20 0;
#X connect 20 0 11 0;
#X connect 21 0 9 1;
#X connect 22 0 23 0;
#X connect 23 0 13 1;
#X connect 24 0 9 0;
#X connect 26 0 27 0;
#X connect 27 0 22 0;
#X connect 28 0 22 0;
