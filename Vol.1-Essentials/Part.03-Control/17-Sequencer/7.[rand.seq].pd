#N canvas 515 23 508 664 12;
#X floatatom 268 354 5 0 0 0 - - -;
#X obj 268 434 mtof;
#X obj 440 378 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 296 555 else/out~;
#X obj 268 301 else/tempo 60 50 -on;
#X obj 268 404 else/display;
#X obj 268 331 else/rand.seq 5 4 1 3 2 1;
#X obj 74 411 loadbang;
#X text 114 561 play random notes with different weigths., f 22;
#X obj 268 483 osc~;
#X obj 314 483 decay2~ 50 500;
#X obj 314 461 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 296 514 *~;
#X msg 74 440 60 64 69 71 76;
#X obj 328 418 table \$0-notes 5;
#X obj 74 470 array set \$0-notes;
#X obj 268 378 tabread \$0-notes;
#X obj 236 163 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 106 140 until;
#X obj 106 114 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 236 208 else/regroup;
#X obj 236 235 else/display;
#X obj 106 164 else/rand.seq 12;
#X text 126 110 generate series;
#X text 36 29 The [rand.seq] object generates a ranodm sequence of
integer numbers. You can use it to generate a dodecaphonic series \,
for instance. Check its help file.;
#X text 36 319 You can also use it to read a sequence of values with
different weights., f 28;
#X connect 0 0 16 0;
#X connect 1 0 9 0;
#X connect 1 0 11 0;
#X connect 4 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 6 1 2 0;
#X connect 7 0 13 0;
#X connect 9 0 12 0;
#X connect 10 0 12 1;
#X connect 11 0 10 0;
#X connect 12 0 3 0;
#X connect 12 0 3 1;
#X connect 13 0 15 0;
#X connect 16 0 5 0;
#X connect 17 0 18 1;
#X connect 17 0 20 0;
#X connect 18 0 22 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 22 0 20 0;
#X connect 22 1 17 0;
