#N canvas 384 67 953 571 12;
#X floatatom 84 255 5 0 0 0 - - -;
#X floatatom 84 321 5 0 0 0 - - -;
#X floatatom 137 254 5 0 0 0 - - -;
#X floatatom 137 320 5 0 0 0 - - -;
#X obj 296 324 dac~;
#N canvas 281 177 369 315 sum 0;
#X obj 83 95 inlet;
#X obj 83 183 outlet;
#X obj 83 141 + 1;
#X obj 215 94 inlet;
#X obj 215 182 outlet;
#X obj 215 136 + 2;
#X text 70 65 LEFT INLET;
#X text 203 62 RIGH INLET;
#X text 56 44 Corresponds to;
#X text 187 44 Corresponds to;
#X text 60 216 Corresponds to;
#X text 191 216 Corresponds to;
#X text 71 236 LEFT OUTLET;
#X text 207 234 RIGH OUTLET;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 5 0 4 0;
#X restore 92 286 pd sum;
#X text 48 222 Subpatches:;
#N canvas 682 233 270 222 On/Off 0;
#X obj 61 31 inlet~;
#X obj 91 96 *~;
#X obj 120 32 inlet;
#X obj 91 135 outlet~;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X restore 296 287 pd On/Off;
#X obj 282 254 osc~ 440;
#X msg 356 256 0.1;
#X msg 377 287 0;
#X text 147 288 <= click to open =>;
#X symbolatom 552 311 10 0 0 0 - - -;
#X floatatom 640 310 5 0 0 0 - - -;
#X msg 552 229 bang;
#X floatatom 691 172 5 0 0 0 - - -;
#X floatatom 691 318 5 0 0 0 - - -;
#X obj 552 263 abstraction-1 example 1, f 13;
#X obj 691 204 abstraction-2;
#X text 527 182 Abstractions:;
#X text 42 478 Abstractions behave like objects. They load arguments
\, which are loaded in the abstraction by the usage of dollar signs
within objects - not to be confused with the usage of dollar signs
inside messages!, f 59;
#X text 496 24 A patch that has a subpatch or an abstraction is called
the parent (so subpatches/abstractions are "children"). The “Graph
on Parent” is an option in a patch window’s properties to allow
it to display contents on the parent patch \, be it a subpatch or an
abstraction!;
#X text 496 101 The “Graph on Parent” option hides object boxes
\, message boxes and cord connections \, but other GUI elements are
shown (including arrays \, atom boxes and comments)., f 59;
#X text 486 264 click to open =>, f 9;
#X text 798 238 <= right click and chose "open", f 16;
#X obj 617 459 savestate;
#X obj 757 459 clone;
#X text 501 499 And also check out the help file of [clone] \, which
can load multiple instances of an abstraction in a Pd patch.;
#X text 493 350 ============================================================
;
#X text 43 23 A subpatch is a subwindow of a pacth \, and saved within
the same patch file \, mostly used to better organize your code into
sections as a single box. To create a subpatch \, just use the [pd]
object and a subwindow is automatically created. You can also give
it a name argument just to name the subwindow (but it doesn't really
affect it).;
#X text 43 117 Data goes in and out of a subpatch via inlets/outlets
\, created by corresponding [inlet] / [outlet] objects. To deal with
audio signal \, use the signal variants: [inlet~] and [outlet~]. Check
the help file of [inlet~] to see how it can also deal with control
messages and take default values., f 58;
#X text 42 369 An abstraction is a separate Pd patch (a separate file
document) that is opened inside another patch. It is also a kind of
external \, even though not being a compiled object. For a patch to
be loaded as an abstraction \, it must be in a folder that Pd automatically
searches for such as the user added paths (Pd => Preferences => Path)
or in the same folder as the patch that loads it.;
#X text 495 374 Check out the help file of [savestate] \, which can
save a list of parameters (or its 'state') from the abstraction when
you save the owning patch. Note the the 'state' is not saved as a list
of arguments \, but as a hidden list in the patch.;
#X connect 0 0 5 0;
#X connect 2 0 5 1;
#X connect 5 0 1 0;
#X connect 5 1 3 0;
#X connect 7 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 9 0 7 1;
#X connect 10 0 7 1;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 17 0 12 0;
#X connect 17 1 13 0;
#X connect 18 0 16 0;
