#N canvas 402 23 901 421 12;
#X declare -lib else;
#X obj 117 212 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 100 256;
#X obj 117 158 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 162 288 *~;
#X obj 117 252 bl.saw~;
#X obj 180 263 decay2~ 50 2000;
#X obj 117 184 sequencer 150 100 80 120 60 150 100 70 100;
#X obj 180 240 b;
#X msg 164 158 50 170 90 140;
#X obj 583 297 *~;
#X obj 527 261 bl.saw~;
#X obj 601 260 decay2~ 50 2000;
#X obj 117 131 tempo 120 100 -on;
#X obj 601 153 tempo~ 120 100 -on;
#X obj 527 193 sequencer~ 150 100 80 120 60 150 100 70 100;
#X obj 527 221 display~;
#X text 466 62 ELSE also provides the signal rate versions [tempo~]
and [sequencer~]. The [sequencer~] objects can also be triggered by
impulses \, which isthe output of [tempo~]. Check their help files
for more information., f 54;
#X obj 583 331 out~;
#X obj 162 314 out~;
#X obj 702 20 declare -lib else;
#X text 26 22 The [sequencer] object from ELSE is an abstraction based
on the last example. It can initialize a sequence with arguments and
load any other sequence from an input list. In this example we have
[tempo] with an irregular beat \, check the help file of [tempo] and
[sequence] for more information., f 56;
#X connect 0 0 3 0;
#X connect 0 0 6 0;
#X connect 1 0 5 0;
#X connect 2 0 17 0;
#X connect 3 0 2 0;
#X connect 4 0 2 1;
#X connect 5 0 0 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 16 0;
#X connect 9 0 8 0;
#X connect 10 0 8 1;
#X connect 11 0 1 0;
#X connect 12 0 13 0;
#X connect 12 0 10 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
