#N canvas 295 51 946 574 12;
#X declare -path else;
#X obj 174 328 glide2~ 1000;
#X obj 64 226 rampnoise~ 20.7;
#X obj 174 266 sh~;
#X obj 174 387 bl.saw~;
#X obj 174 293 display~;
#X obj 192 236 display~;
#X obj 174 359 rescale~ 50 250;
#X obj 192 211 pulse~ 0.33 0.6;
#X obj 497 184 rampnoise~ 20.7;
#X obj 497 335 display~;
#X obj 543 261 display~;
#X obj 543 220 pulse~ 0.33 0.6, f 8;
#X obj 497 298 sh~ -tr;
#X obj 497 404 bl.saw~;
#X obj 497 376 rescale~ 50 250;
#X obj 708 244 noise~;
#X obj 708 307 display~;
#X obj 708 276 sh~ -tr;
#X obj 764 244 rampnoise~ 20;
#X msg 632 244 thresh \$1;
#X obj 632 224 nbx 5 14 -0.9 0.9 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 0 256;
#X obj 635 203 hsl 128 15 -0.9 0.9 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X obj 708 378 bl.saw~;
#X obj 708 350 rescale~ 50 250;
#X text 42 21 By default \, [sh~] operates in "gate" mode \, in which
it lets the signal through if the trigger signal is above s threshold
(0 by default)., f 55;
#X text 42 90 This works freat with impulses \, but if you have a gate
like a pulse \, you don't have a sample and hold behaviour. Let's check
the patch below \, where we have a [rampnoise~] object that either
is passed through or not. Down next \, [glide~] smoothens the values
to avoid discontinuities when the gate is reopened., f 55;
#X text 463 62 The [sh~] object also has another mode called "trigger"
(set with the "-tr" flag). This allows it to be triggered by pulses
in a way that if the trigger signal goes above the threshold \, then
the input is sampled and held. The object will only be retriggered
if the trigger signal falls below the threshold first. You can set
a new threshold value with the "thresh" message. Check both examples
below.;
#X obj 174 419 plate.rev~ 50 0.6 0.25 0.8 0.6, f 18;
#X obj 497 436 plate.rev~ 50 0.6 0.25 0.8 0.6, f 18;
#X obj 708 410 plate.rev~ 50 0.6 0.25 0.8 0.6, f 18;
#X obj 727 24 declare -path else;
#X obj 174 471 out2~;
#X obj 497 488 out2~;
#X obj 708 462 out2~;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 27 0;
#X connect 4 0 0 0;
#X connect 5 0 2 1;
#X connect 6 0 3 0;
#X connect 7 0 5 0;
#X connect 8 0 12 0;
#X connect 9 0 14 0;
#X connect 10 0 12 1;
#X connect 11 0 10 0;
#X connect 12 0 9 0;
#X connect 13 0 28 0;
#X connect 14 0 13 0;
#X connect 15 0 17 0;
#X connect 16 0 23 0;
#X connect 17 0 16 0;
#X connect 18 0 17 1;
#X connect 19 0 17 0;
#X connect 20 0 19 0;
#X connect 21 0 20 0;
#X connect 22 0 29 0;
#X connect 23 0 22 0;
#X connect 27 0 31 0;
#X connect 27 1 31 1;
#X connect 28 0 32 0;
#X connect 28 1 32 1;
#X connect 29 0 33 0;
#X connect 29 1 33 1;
