#N canvas 581 25 578 751 12;
#X declare -path else;
#X obj 373 302 hsl 128 15 0 1000 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 370 333 0 0 0 0 - - -;
#X text 80 640 BUG:;
#X obj 98 433 out~;
#X obj 370 465 out~;
#X msg 370 366 500 \$1;
#X obj 370 396 envgen~;
#X text 77 148 A signal input allows a smooth and continuous change
in the read position. Note however that such changes promote a speed
change. Thinking again of a magnetic tape \, for the read head to move
from one point to another \, its moving speed is sumed to the normal
reading speed of the tape., f 58;
#X text 78 227 But when the read head reaches its destination and rests
there \, only the reading speed of the tape is acting \, this the original
speed is restored. Fool around with the slider below and see how that
happens., f 58;
#X obj 370 428 delread4~ \$0-delay;
#X obj 121 399 delwrite~ \$0-delay 1000;
#X text 79 520 Interpolation:;
#X text 79 544 Since it uses the same interpolation as [tabread4~]
\, the [delread4~] object also ignores the first recorded sample \,
as it is supposed to be a guard point. In practical terms \, the object's
minimum delay is 1 sample (whereas [delread~] can have a minimum delay
of 0).;
#X text 77 52 The [delread~] object only has control input and does
not interpolate \, so it can only read back in a buffer at a specific
sample behind. On the other hand \, the native [delread4~] object can
read in between samples \, with the same kind of interpolation used
in [tabread4~] and accepts signal inputs.;
#X text 81 665 Up to Pd 0.49-1 \, [delread~] e [delread4~] cannot read
up to the maximum delay line \, but they go up to a block of audio
less. A workaround is to specify a buffer size a block longer than
you actually need.;
#X obj 373 15 declare -path else;
#X obj 98 350 play.file~ bubul.wav 1 1, f 25;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 9 0 4 0;
#X connect 16 0 3 0;
#X connect 16 0 10 0;
