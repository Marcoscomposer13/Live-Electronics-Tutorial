#N canvas 644 116 566 624 12;
#X declare -lib else;
#X obj 381 216 phasor~;
#X obj 381 290 out~;
#X obj 412 184 r \$0-hz;
#X obj 84 305 s \$0-hz;
#X obj 381 184 *~;
#X obj 84 279 /;
#X obj 84 254 swap;
#X obj 381 250 table~ \$0-buffer;
#X obj 381 148 display~ 8;
#X text 451 150 Ratio;
#X obj 381 84 rampnoise~ 0.25;
#X obj 381 115 *~ 3;
#X text 45 117 The ratio is now controlled by a random ramp generator.
, f 42;
#X obj 334 544 out~;
#X msg 334 483 speed \$1;
#X obj 334 461 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -110.006 256;
#X text 45 38 In this example we use [table~] from the ELSE library.
One advantage that makes it simpler is that we don't need to bother
multiplying the output of [phasor~] \, as the index input is mapped
from 0 to 1!, f 42;
#X obj 84 223 unpack;
#X obj 391 41 declare -lib else;
#X obj 84 182 sample~ \$0-buffer violin.wav;
#X obj 334 513 player~ violin.wav 1 1;
#X text 81 405 But even much more convenient is the [player~] object
from ELSE. This is an abstraction that relies on [tabread4~] and already
loads a file internally. Like [sample~] \, it has multi channel support
and can query the number of channels from a sound file given as an
argument. Check its help file for more details and features., f 29
;
#X obj 334 430 rescale -300 300;
#X obj 334 398 rampnoise 0.1;
#X text 403 459 percentage;
#X connect 0 0 7 0;
#X connect 2 0 4 1;
#X connect 4 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 17 0 6 0;
#X connect 17 1 6 1;
#X connect 19 0 17 0;
#X connect 20 0 13 0;
#X connect 22 0 15 0;
#X connect 23 0 22 0;
