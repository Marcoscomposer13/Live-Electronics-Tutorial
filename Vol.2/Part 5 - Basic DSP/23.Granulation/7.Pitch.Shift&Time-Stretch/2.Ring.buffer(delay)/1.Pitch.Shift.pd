#N canvas 405 96 903 672 12;
#X obj 498 478 *~;
#X obj 545 524 +~;
#X obj 590 518 *~;
#X obj 441 396 *~;
#X obj 590 445 *~;
#X obj 632 187 expr 1000 / $f1;
#X obj 608 157 nbx 5 14 5 500 0 0 empty \$0-size empty 0 -8 0 10 -228856
-1 -1 75 256;
#X floatatom 632 217 6 0 0 0 - - -, f 6;
#X text 709 300 Hz;
#X obj 519 563 out~;
#X obj 516 418 envelope~;
#X obj 734 509 envelope~;
#X obj 469 55 sampler~ ../../../../../samples/bubul.wav 1 1;
#X obj 173 268 *~ 50;
#X msg 135 200 5;
#X msg 210 199 -5;
#X obj 173 237 phasor~;
#X obj 173 336 out~;
#X obj 173 300 delread4~ \$0-buffer;
#X text 122 177 lower;
#X text 240 198 higher;
#X msg 173 199 0;
#X text 171 176 original;
#X text 28 27 We've used delay as sort of a pitch shifter in the arpeggiator
example. When we have an ascending ramp \, the delay time increases
and reading speed slows down. On the other hand \, a downwards ramp
speeds up. For up and down ramps \, we can use a simple [phasor~] object
\, but the relationship is inverted - because a positive frequency
(an ascending ramp) lowers the pitch and a negative frequency (descending
ramp) raises the pitch., f 53;
#X text 28 414 Now we need to calculate the frequency of [phasor~]
from a ratio. First we we need to subtract the reading head speed that's
always running (that'd be subtracting 1). Then we need to invert the
result because of the inverted relationship. This is calculated by
subtracting the ratio from 1 instead. Now that we have the adjusted
ratio/transposition frequency \, we multiply it by the grain size frequency.
, f 53;
#X obj 752 151 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-cents empty 0 -8
0 10 -228856 -1 -1 -975 256;
#X floatatom 752 249 9 0 0 0 - - -, f 9;
#X floatatom 752 199 5 0 0 0 - - -, f 5;
#X obj 752 174 cents2ratio;
#X obj 752 222 expr 1 - $f1;
#X obj 734 275 *~;
#X obj 734 299 display~;
#X text 681 210 grain freq., f 5;
#X text 613 136 grain size;
#X text 664 155 (ms);
#X text 750 129 transposition;
#X text 811 148 (cents);
#X obj 441 229 initmess \; \$0-size 75 \; \$0-cents -400;
#X obj 441 427 delread4~ \$0-buffer, f 9;
#X obj 590 472 delread4~ \$0-buffer;
#X obj 608 391 f2s~ 50;
#X obj 734 395 pimp~ 0 0.5;
#X obj 516 357 pimp~;
#X obj 469 81 delwrite~ \$0-buffer 500;
#X text 29 550 Again \, we have two overlapping grains and we're done.
The grain sizes in this example range from 5 to 200 ms. The grain size
only affects the result if it is too small or too big \, so we usually
have it at a fixed reasonable value., f 53;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 1 0 9 1;
#X connect 2 0 1 1;
#X connect 3 0 38 0;
#X connect 4 0 39 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 6 0 40 0;
#X connect 7 0 30 0;
#X connect 10 0 0 1;
#X connect 11 0 2 1;
#X connect 12 0 43 0;
#X connect 13 0 18 0;
#X connect 14 0 16 0;
#X connect 15 0 16 0;
#X connect 16 0 13 0;
#X connect 18 0 17 0;
#X connect 18 0 17 1;
#X connect 21 0 16 0;
#X connect 25 0 28 0;
#X connect 26 0 30 1;
#X connect 27 0 29 0;
#X connect 28 0 27 0;
#X connect 29 0 26 0;
#X connect 30 0 31 0;
#X connect 31 0 42 0;
#X connect 31 0 41 0;
#X connect 38 0 0 0;
#X connect 39 0 2 0;
#X connect 40 0 3 1;
#X connect 40 0 4 1;
#X connect 41 0 4 0;
#X connect 41 0 11 0;
#X connect 42 0 3 0;
#X connect 42 0 10 0;
