#N canvas 308 148 954 562 12;
#X floatatom 613 158 5 0 1000 0 - - -, f 5;
#X floatatom 689 197 5 0 0 0 - - -, f 5;
#X obj 175 334 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 692 175 hsl 128 15 -0.999 0.999 0 0 empty g ganho -2 -8 0 10
-228856 -1 -1 629 1;
#X obj 616 136 hsl 128 15 1 100 1 0 empty ms empty -2 -8 0 10 -191407
-1 -1 5366 0;
#X text 733 198 ganho de feedforward;
#X text 788 212 e feedback;
#X obj 624 190 s \$0-del;
#X obj 198 432 *~;
#X obj 160 402 noise~;
#X obj 69 76 cnv 15 310 120 empty empty empty 20 12 0 14 -228856 -66577
0;
#X text 125 91 |;
#X text 125 102 |;
#X text 125 112 |;
#X text 110 123 |;
#X text 110 133 | z^-d |;
#X text 159 124 |;
#X text 159 143 |;
#X text 110 143 |;
#X text 113 114 _______;
#X text 113 143 _______;
#X text 157 134 -----;
#X text 125 115 v;
#X text 185 117 |;
#X text 185 98 |;
#X text 185 107 |;
#X text 185 93 ^;
#X text 273 92 |;
#X text 273 101 |;
#X text 273 110 |;
#X text 252 125 |;
#X text 252 134 | z^-d |;
#X text 301 124 |;
#X text 301 144 |;
#X text 252 144 |;
#X text 255 115 _______;
#X text 255 144 _______;
#X text 273 113 v;
#X text 215 119 |;
#X text 215 128 |;
#X text 215 99 |;
#X text 215 109 |;
#X text 215 93 ^;
#X text 327 84 >;
#X text 91 170 y[n] = -g*x[n] + x[n-d] + g*y[n-d];
#X text 218 134 -(*g)-;
#X text 77 84 x[n] -----(*-g)--(+)--(+)----------- y[n];
#X obj 539 283 out~;
#X obj 654 492 out~;
#X obj 155 488 out~;
#X obj 538 235 allpass.rev~ 100 0.8 1;
#X obj 525 174 r~ \$0-in;
#X obj 212 460 s~ \$0-in;
#X obj 654 431 r~ \$0-in;
#X obj 216 364 pulse~ 1 0.1;
#X obj 325 364 sig~ 1;
#X obj 175 361 + 1;
#X text 185 128 |;
#X text 627 107 delay time (ms);
#X obj 716 234 s \$0-g;
#X text 238 333 Input;
#X text 494 366 In the subpatch below we have an allpass implementation
with native Pd objects., f 55;
#N canvas 345 152 510 380 allpass 0;
#X obj 67 128 * -1;
#X obj 52 155 *~;
#X obj 75 191 +~;
#X obj 75 218 +~;
#X obj 237 188 *~;
#X obj 89 250 delwrite~ \$0-y 100;
#X obj 69 64 delwrite~ \$0-x 100;
#X obj 75 300 outlet~;
#X obj 341 198 block~ 1;
#X obj 52 24 inlet~;
#X text 132 301 y[n] = -g*x[n] + x[n-d] + g*y[n-d];
#X text 106 47 feedforward;
#X text 235 252 feedback;
#X obj 198 125 r \$0-del;
#X obj 90 157 delread4~ \$0-x;
#X obj 198 157 delread4~ \$0-y;
#X text 265 125 <= delay time;
#X text 310 78 <= gain coefficient;
#X obj 252 78 r \$0-g;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 0 7 0;
#X connect 4 0 3 1;
#X connect 9 0 1 0;
#X connect 9 0 6 0;
#X connect 13 0 14 0;
#X connect 13 0 15 0;
#X connect 14 0 2 1;
#X connect 15 0 4 0;
#X connect 18 0 4 1;
#X connect 18 0 0 0;
#X restore 654 459 pd allpass;
#X text 36 28 The [allpass.rev~] object from ELSE is a delay reverberator
whose diagram is:, f 45;
#X text 32 222 It's the same diagram as shown before for allpass filters
\, but now we have a delay time parameter (d) which defiens the number
of samples. Note that this is something new and different from order
filters \, this is why this object is better defined as a reverberator
rather than a filter.;
#X obj 216 404 xselect~ 2 100 1;
#X obj 728 280 initmess \; ms 7 \; g -0.9;
#X text 472 28 This reverberator acts on the frequency content at the
release. This is why we have short bursts of noise in this example
\, so it affects transients and percussive sounds. Check its help file.
;
#X connect 0 0 7 0;
#X connect 0 0 50 1;
#X connect 1 0 50 2;
#X connect 1 0 59 0;
#X connect 2 0 56 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 8 0 49 0;
#X connect 8 0 49 1;
#X connect 8 0 52 0;
#X connect 9 0 8 0;
#X connect 50 0 47 0;
#X connect 50 0 47 1;
#X connect 51 0 50 0;
#X connect 53 0 62 0;
#X connect 54 0 65 0;
#X connect 55 0 65 1;
#X connect 56 0 65 0;
#X connect 62 0 48 0;
#X connect 62 0 48 1;
#X connect 65 0 8 1;
