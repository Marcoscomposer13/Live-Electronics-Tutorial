#N canvas 430 235 1010 556 12;
#X obj 538 471 openfile http://williambrent.conflations.com/pages/research.html
;
#X obj 538 440 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 47 425 cnv 15 418 78 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-IR 16384 float 2;
#X coords 0 1 16384 -1 420 80 1 0 0;
#X restore 46 424 graph;
#X obj 64 349 soundfiler;
#X obj 601 94 s~ \$0-input;
#X obj 769 99 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 769 125 tabplay~ \$0-IR;
#X obj 769 163 out~;
#X text 793 99 Play IR:;
#X obj 538 127 out~;
#X obj 616 233 r~ \$0-input;
#X obj 616 304 out~;
#X text 549 266 click =>;
#X obj 581 52 play.file~ 1 ../../../../samples/didge.aif 1 1;
#X text 560 440 <= click;
#X obj 64 317 initmess read -resize ../../../../samples/IR.wav \$0-IR
;
#X text 53 32 A partitioned convolution uses partitioned (smaller)
windows that provide a much shorter latency. The impulse response gets
partitioned in small snippets and the convolution is done in each part
separately then added together. Thus \, we don't need to perform the
analysis on a big window size that generates a lot of latency.;
#X text 53 134 Here we use the [conv~] object from the ELSE library
with a partition size of 256 points. The [conv~] object is an abstraction
that relies on [clone] to perform convolution on each partition. The
block window size is then 512 points so we can use the same overlap
and add method as the last example (with zero padding).;
#X obj 616 265 conv~ 256 ../../../../samples/IR.wav;
#X text 53 232 In this object \, the convolution of all partitions
are done at the same time but then delayed accordingly so they get
added at the right time.;
#X text 656 401 You can also check [convolve~] by William Brent (available
in deken) - it's highly recommended to see all of his work., f 42
;
#X connect 1 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 0 8 1;
#X connect 11 0 19 0;
#X connect 14 0 5 0;
#X connect 14 0 10 1;
#X connect 14 0 10 0;
#X connect 16 0 4 0;
#X connect 19 0 12 0;
#X connect 19 0 12 1;
