#N canvas 555 39 569 587 12;
#X declare -path else;
#X floatatom 70 249 5 0 0 0 - - -;
#N canvas 786 159 450 300 sequencer 0;
#X obj 188 195 mtof;
#X obj 84 136 metro 200;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sequencer 16 float 3;
#A 0 -6 -8 -8 -3 -8 1 4 4 -3 -5 -5 -1 2 6 7 7;
#X coords 0 12 16 -12 100 70 1;
#X restore 221 108 graph;
#X obj 84 197 v i;
#X obj 188 223 outlet;
#X obj 84 111 inlet;
#X obj 83 159 expr (i + 1) % 16 \; sequencer[i] + 34;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X restore 70 222 pd sequencer;
#X obj 70 199 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 153 449 out~;
#X obj 263 414 graph~ 800 10 -1.1 1.1;
#X obj 70 274 phasor~ 100;
#X obj 196 339 function~;
#X obj 196 169 initmess 0 0.25 1 0.15 1 0.35 0 0.05 -1 0.1 -1 0.1 0
, f 31;
#X text 414 252 <= [function];
#X text 71 70 The [function~] object from ELSE can be used to generate
crazy and different waveforms. Check its help file. Here we also use
the [function] object from ELSE that allows you to draw waveforms on
the fly.;
#X obj 329 19 declare -path else;
#X obj 199 214 function 200 100 empty empty -1 1 220 220 220 50 50
50 0 0 0 0 0 0.25 1 0.15 1 0.35 0 0.05 -1 0.1 -1 0.1 0;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 6 0 3 1;
#X connect 6 0 4 0;
#X connect 7 0 11 0;
#X connect 11 0 6 0;
