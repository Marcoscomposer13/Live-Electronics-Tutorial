#N struct 1003-DS float x float y array 1003-table 1003-f;
#N struct 1003-f float x float y;
#N canvas 451 52 534 598 12;
#N canvas 1047 343 334 221 display 1;
#X scalar 1003-DS 10 105 \; 0 0 \; 20 0 \; 57 26 \; 60 0 \; 80 0 \;
100 0 \; 120 0 \; 140 0 \; 160 0 \; 180 0 \; 200 0 \; 220 0 \; 240
0 \; 260 0 \; 280 0 \; 300 0 \; \;;
#X coords 0 221 1 220 0 0 0;
#X restore 359 220 pd display;
#X obj 414 379 pointer;
#X obj 79 139 loadbang;
#X obj 305 368 r coords;
#N canvas 442 23 480 272 element 0;
#X obj 92 230 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 89 200 draw a black dot to represent the value:;
#X obj 167 152 struct \$0-f float x float y;
#X text 33 42 The element is defined as a struct of name "\$0-f" containing
now both a float named "x" and "y". Since these are the special variable
names for the horizontal and vertical coordinates \, this means you
can drag this element both vertically and horizonatly.;
#X restore 359 167 pd element;
#N canvas 636 221 509 380 template 0;
#X obj 245 304 plot \$0-table 900 2;
#X obj 66 131 struct \$0-DS float x float y array \$0-table \$0-f;
#X text 61 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-f" defined in the other subpatch., f 53;
#X text 72 178 The drawing instruction now does not specify a spacing
value between the floats in the array. This is because it would get
ignored because we also have a "x" variable inthe element's struct.
Hence \, it takes 'x' from the data itself. The 'x' values are initialized
as "0" \, so all values in the array are grouped together at initialization.
, f 47;
#X restore 359 193 pd template;
#X obj 414 349 r pointer;
#X msg 79 170 \; pd-display clear \, vis 1 \; pointer traverse pd-display
\, bang \; coords 10 105 \; size 16;
#X msg 49 312 0 20 40 60 80 100 120 140 160 180 200 220 240 260 280
300;
#X obj 231 486 r size;
#X obj 231 513 display;
#X text 259 514 <= sets size;
#X text 77 21 In this example we're able to set the values of both
'x' and 'y' elements in an array., f 52;
#X text 76 67 You can now click and drag each point in the array both
vertically and horizontaly., f 52;
#X text 54 287 Initialize/set the 'x' values for each element:;
#X text 68 352 You can later drag around also in the 'x' axis., f
19;
#X obj 305 409 append \$0-DS x y;
#X obj 231 543 array size -s \$0-DS \$0-table;
#X obj 49 442 array set -s \$0-DS \$0-table -f \$0-f x;
#X connect 1 0 16 2;
#X connect 2 0 7 0;
#X connect 3 0 16 0;
#X connect 6 0 1 0;
#X connect 8 0 18 0;
#X connect 9 0 10 0;
#X connect 10 0 17 0;
#X connect 16 0 17 1;
#X connect 16 0 18 2;
