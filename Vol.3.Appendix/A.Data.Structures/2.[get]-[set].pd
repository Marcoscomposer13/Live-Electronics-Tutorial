#N canvas 206 50 756 451 12;
#X obj 165 133 pointer;
#X obj 42 24 loadbang;
#X msg 165 106 traverse pd-display \, bang;
#N canvas 977 177 161 169 display 1;
#X restore 270 161 pd display;
#N canvas 106 323 439 197 template 0;
#X obj 91 74 struct \$0-DS float x float y float n;
#X obj 87 127 drawnumber n;
#X text 185 128 Drawing instruction for "n";
#X text 61 31 Data Structure named "\$0-DS" holding a pair of coordinates
"x/y" and float called "n", f 43;
#X restore 265 135 pd template;
#X msg 223 46 \; pd-display clear \, vis 1, f 17;
#X obj 42 338 nbx 5 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 12
-228856 -1 -1 127 256;
#X obj 224 344 nbx 3 16 0 127 0 0 empty empty empty 0 -8 0 12 -228856
-1 -1 64 256;
#X obj 321 345 nbx 3 16 0 127 0 0 empty empty empty 0 -8 0 12 -228856
-1 -1 64 256;
#X obj 294 374 hot;
#X msg 312 315 set \$1;
#X obj 42 76 trigger bang bang bang;
#X text 198 342 "x";
#X text 290 344 "y";
#X obj 42 50 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X msg 42 120 127 64 64;
#X text 419 32 In this example we'll "get" and "set" the value of the
float and its coordinates with the [get] and [set] objects. These objects
need a pointer to the data structure \, which is given by the outlet
of [append]., f 43;
#X obj 42 305 get \$0-DS n;
#X obj 42 371 set \$0-DS n;
#X text 11 338 "n";
#X obj 224 287 get \$0-DS x y;
#X obj 294 407 set \$0-DS x y;
#X obj 42 162 append \$0-DS n x y;
#X obj 42 277 trigger pointer pointer;
#X obj 224 256 trigger pointer pointer;
#X obj 42 244 pointer;
#X obj 57 219 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 76 217 <= send pointer again;
#X text 419 129 Note that the [pointer] object can also be used as
a storage object \, so it can store and resend a pointer it received.
, f 43;
#X text 418 192 The [trigger] object also deals with pointers and we
use it to send the pointer to the [set] and [get] objects. Check how
[get \$0-DS n] gets the value from "n" \, and how you can set the value
of 'n' with [set \$0-DS n]. The same can be done for the coordinates
values., f 43;
#X text 416 319 If you click on the data structure and edit the value
of the float \, or also drag it around \, you can resend the pointer
to get the new values by clicking on the bang connected to the [pointer]
object., f 43;
#X text 48 192 <= Added Data Structure's pointer;
#X connect 0 0 22 3;
#X connect 1 0 14 0;
#X connect 2 0 0 0;
#X connect 6 0 18 0;
#X connect 7 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 21 0;
#X connect 9 1 21 1;
#X connect 10 0 8 0;
#X connect 10 0 9 1;
#X connect 11 0 15 0;
#X connect 11 1 2 0;
#X connect 11 2 5 0;
#X connect 14 0 11 0;
#X connect 15 0 22 0;
#X connect 17 0 6 0;
#X connect 20 0 7 0;
#X connect 20 1 10 0;
#X connect 22 0 25 0;
#X connect 23 0 17 0;
#X connect 23 1 24 0;
#X connect 23 1 18 1;
#X connect 24 0 20 0;
#X connect 24 1 21 2;
#X connect 25 0 23 0;
#X connect 26 0 25 0;
