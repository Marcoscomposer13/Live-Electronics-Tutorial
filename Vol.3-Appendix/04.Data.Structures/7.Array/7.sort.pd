#N struct 1028-DS float x float y array 1028-table 1028-element;
#N struct 1028-element float y;
#N canvas 387 93 537 401 12;
#X obj 379 273 pointer;
#N canvas 420 166 509 380 template 0;
#X text 61 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-f" defined in the other subpatch., f 53;
#X text 72 178 The drawing instruction now does not specify a spacing
value between the floats in the array. This is because it would get
ignored because we also have a "x" variable inthe element's struct.
Hence \, it takes 'x' from the data itself. The 'x' values are initialized
as "0" \, so all values in the array are grouped together at initialization.
, f 47;
#X obj 219 309 plot curve \$0-table 900 2 0 0 20;
#X obj 66 131 struct \$0-DS float x float y array \$0-table \$0-element
;
#X restore 360 162 pd template;
#X obj 76 304 display;
#X text 104 305 <= sets size;
#X text 80 26 In this example we're able to set the values of both
'x' and 'y' elements in an array., f 52;
#X text 79 72 You can now click and drag each point in the array both
vertically and horizontaly., f 52;
#X obj 270 303 append \$0-DS x y;
#X obj 76 334 array size -s \$0-DS \$0-table;
#X obj 63 134 initmess \; pd-\$0-display clear \, vis 1 \; \$0-pointer
traverse pd-\$0-display \, bang \; \$0-coords 10 105 \; \$0-size 16
;
#N canvas 1005 301 334 221 \$0-display 1;
#X scalar 1028-DS 10 105 \; 0 \; \;;
#X coords 0 221 1 220 0 0 0;
#X restore 360 189 pd \$0-display;
#X obj 379 243 r \$0-pointer;
#X obj 270 262 r \$0-coords;
#X obj 76 276 r \$0-size;
#N canvas 442 23 480 272 \$0-element 0;
#X obj 92 230 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 89 200 draw a black dot to represent the value:;
#X obj 167 152 struct \$0-element float y;
#X text 33 42 The element is defined as a struct of name "\$0-element"
containing now both a float named "x" and "y". Since these are the
special variable names for the horizontal and vertical coordinates
\, this means you can drag this element both vertically and horizonatly.
;
#X restore 360 136 pd \$0-element;
#X connect 0 0 6 2;
#X connect 2 0 7 0;
#X connect 6 0 7 1;
#X connect 10 0 0 0;
#X connect 11 0 6 0;
#X connect 12 0 2 0;
